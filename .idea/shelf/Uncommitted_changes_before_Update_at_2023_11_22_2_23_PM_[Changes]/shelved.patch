Index: app/src/main/java/com/example/together_watch/ui/setting/SettingScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/together_watch/ui/setting/SettingScreen.kt b/app/src/main/java/com/example/together_watch/ui/setting/SettingScreen.kt
new file mode 100644
--- /dev/null	(date 1700500458000)
+++ b/app/src/main/java/com/example/together_watch/ui/setting/SettingScreen.kt	(date 1700500458000)
@@ -0,0 +1,83 @@
+package com.example.together_watch.ui.setting
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.border
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.width
+import androidx.compose.foundation.shape.CircleShape
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.ArrowForward
+import androidx.compose.material3.Button
+import androidx.compose.material3.Divider
+import androidx.compose.material3.Icon
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.navigation.NavHostController
+import com.example.together_watch.R
+import com.example.together_watch.ui.Destinations
+
+
+@Composable
+fun SettingScreen(
+    navController: NavHostController
+) {
+    Column(modifier = Modifier.padding(16.dp)) {
+        Row(verticalAlignment = Alignment.CenterVertically) {
+            // 프로필 이미지
+            Image(
+                painter = painterResource(id = R.drawable.ic_launcher_foreground),
+                contentDescription = "프로필 이미지",
+                modifier = Modifier
+                    .size(40.dp)
+                    .border(2.dp, Color.Black, shape = CircleShape)
+                    .clip(CircleShape)
+            )
+            Spacer(modifier = Modifier.width(8.dp))
+
+            // 이름과 이메일
+            Column {
+                Text(text = "이름", fontSize = 20.sp)
+                Text(text = "이메일@example.com", fontSize = 16.sp)
+            }
+        }
+
+        Spacer(modifier = Modifier.height(16.dp))
+        Divider(color = Color.Black)
+
+        Spacer(modifier = Modifier.height(16.dp))
+        Text(text = "서비스 설정", fontSize = 24.sp)
+
+        Spacer(modifier = Modifier.height(16.dp))
+        Row(
+            verticalAlignment = Alignment.CenterVertically,
+            horizontalArrangement = Arrangement.SpaceBetween,
+            modifier = Modifier.fillMaxWidth()
+        ) {
+            Text(
+                text = "계정 관리",
+                fontSize = 18.sp,
+                color = Color.Black,
+                modifier = Modifier.clickable {
+                    navController.navigate(Destinations.AccountManagementScreen.route)
+                }
+            )
+            Icon(imageVector = Icons.Default.ArrowForward, contentDescription = "화살표")
+        }
+    }
+}
+
Index: app/src/main/java/com/example/together_watch/ui/person/PersonScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/together_watch/ui/person/PersonScreen.kt b/app/src/main/java/com/example/together_watch/ui/person/PersonScreen.kt
new file mode 100644
--- /dev/null	(date 1700610488000)
+++ b/app/src/main/java/com/example/together_watch/ui/person/PersonScreen.kt	(date 1700610488000)
@@ -0,0 +1,99 @@
+package com.example.together_watch.ui.person
+
+import androidx.compose.foundation.BorderStroke
+import androidx.compose.foundation.background
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.width
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.CheckCircle
+import androidx.compose.material3.Button
+import androidx.compose.material3.ButtonDefaults
+import androidx.compose.material3.Card
+import androidx.compose.material3.CardDefaults
+import androidx.compose.material3.Icon
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Text
+import androidx.compose.material3.contentColorFor
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.navigation.NavController
+import com.example.together_watch.ui.Destinations
+
+
+@Composable
+fun PersonScreen(
+    navController: NavController
+) {
+    var selectedButton by remember { mutableStateOf(0) } // 선택된 버튼 상태 관리
+
+    // 전체 패딩 설정
+    Column(modifier = Modifier.padding(30.dp)) {
+        // 상단 텍스트
+        Text(
+            text = "내가 만든 약속들은\n이런 것들이 있어요.",
+            fontSize = 30.sp,
+            lineHeight = 30.sp,
+            fontWeight = FontWeight.Bold
+        )
+        Spacer(modifier = Modifier.height(20.dp))
+
+        // 버튼을 위한 Row
+        Row(
+            horizontalArrangement = Arrangement.spacedBy(10.dp),
+            verticalAlignment = Alignment.CenterVertically
+        ) {
+            // 첫 번째 버튼
+            CustomButton(
+                text = "확정",
+                isSelected = selectedButton == 1,
+                onSelected = { selectedButton = if (selectedButton != 1) 1 else 0 }
+            )
+
+            // 두 번째 버튼
+            CustomButton(
+                text = "초대 진행 중",
+                isSelected = selectedButton == 2,
+                onSelected = { selectedButton = if (selectedButton != 2) 2 else 0 }
+            )
+        }
+        Spacer(modifier = Modifier.height(20.dp))
+
+
+
+    }
+}
+
+@Composable
+fun CustomButton(text: String, isSelected: Boolean, onSelected: () -> Unit) {
+    Button(
+        onClick = onSelected,
+        shape = RoundedCornerShape(30),
+        colors = ButtonDefaults.buttonColors(containerColor = if (isSelected) Color.Gray else Color.LightGray),
+        border = if (isSelected) BorderStroke(1.dp, Color.Green) else null,
+        modifier = Modifier.padding(5.dp)
+    ) {
+        Icon(Icons.Filled.CheckCircle, contentDescription = null)
+        Spacer(Modifier.width(5.dp))
+        Text(text)
+    }
+}
Index: app/src/main/java/com/example/together_watch/ui/home/CreatePromiseScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/together_watch/ui/home/CreatePromiseScreen.kt b/app/src/main/java/com/example/together_watch/ui/home/CreatePromiseScreen.kt
new file mode 100644
--- /dev/null	(date 1700628438420)
+++ b/app/src/main/java/com/example/together_watch/ui/home/CreatePromiseScreen.kt	(date 1700628438420)
@@ -0,0 +1,203 @@
+package com.example.together_watch.ui.home
+
+import android.os.Build
+import androidx.annotation.RequiresApi
+import androidx.compose.foundation.BorderStroke
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.border
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.ArrowBack
+import androidx.compose.material.icons.filled.ArrowForward
+import androidx.compose.material.icons.filled.Info
+import androidx.compose.material.icons.filled.Send
+import androidx.compose.material3.*
+import androidx.compose.runtime.*
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.RectangleShape
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import androidx.navigation.compose.*
+import com.example.together_watch.R
+import com.example.together_watch.ui.Destinations
+import java.time.LocalDate
+
+
+// 약속 생성
+
+@RequiresApi(Build.VERSION_CODES.O)
+@Composable
+fun CreatePromiseScreen() {
+    val currentScreen = remember { mutableIntStateOf(1) }
+    val nextScreen = { currentScreen.intValue++ }
+    val complete = { /* 완료 액션 구현 */ }
+
+    Box(modifier = Modifier.fillMaxSize()) {
+        Column(
+            modifier = Modifier.fillMaxWidth(),
+            horizontalAlignment = Alignment.CenterHorizontally,
+            verticalArrangement = Arrangement.SpaceBetween
+
+        ) {
+            Column(
+                modifier = Modifier.weight(1f, true), // Takes up all available space except for the button
+                horizontalAlignment = Alignment.CenterHorizontally
+            ) {
+                Box(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(16.dp)
+                ) {
+                    IconButton(
+                        onClick = { /* 뒤로가기 기능 구현 */ },
+                        modifier = Modifier.align(Alignment.CenterStart)
+                    ) {
+                        Icon(Icons.Filled.ArrowBack, contentDescription = null)
+                    }
+                }
+
+            }
+
+            Button(
+                onClick ={},    //버튼 눌렀을 때 화면 바뀌도록 구현
+                modifier = Modifier.fillMaxWidth(),
+                shape = RectangleShape
+            ) {
+                Text( "다음")
+            }
+        }
+    }
+}
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun FirstScreen() {
+    var text by remember { mutableStateOf("") } // 사용자 입력을 저장하기 위한 상태
+
+    Column(
+        modifier = Modifier.padding(horizontal = 20.dp, vertical = 30.dp)
+    ) {
+        Text("약속을 잡아볼까요?", modifier = Modifier.padding(bottom = 5.dp), style = TextStyle(fontSize = 20.sp))
+        Text("먼저, 약속 이름이 필요해요.", modifier = Modifier.padding(bottom = 10.dp), style = TextStyle(fontSize = 15.sp))
+        OutlinedTextField(
+            value = text, // 텍스트 필드의 값
+            onValueChange = { newText ->
+                text = newText // 사용자가 입력한 새로운 텍스트로 업데이트
+            },
+            placeholder = { Text("12자 내의 이름을 입력해주세요") },
+            colors = TextFieldDefaults.outlinedTextFieldColors(
+                unfocusedBorderColor = Color.Transparent,
+                focusedBorderColor = Color.Transparent,
+            )
+        )
+        Divider()
+    }
+}
+
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun SecondScreen() {
+    var text by remember { mutableStateOf("") } // 사용자 입력을 저장하기 위한 상태
+
+    Column(
+        modifier = Modifier.padding(horizontal = 20.dp, vertical = 30.dp)
+    ) {
+        Text("어디서 보나요?", modifier = Modifier.padding(bottom = 5.dp), style = TextStyle(fontSize = 20.sp))
+        Text("약속 장소를 잡아주세요", modifier = Modifier.padding(bottom = 10.dp), style = TextStyle(fontSize = 15.sp))
+        OutlinedTextField(
+            value = text, // 텍스트 필드의 값
+            onValueChange = { newText ->
+                text = newText // 사용자가 입력한 새로운 텍스트로 업데이트
+            },
+            placeholder = { Text("12자 내의 약속 장소를 입력해주세요") },
+            colors = TextFieldDefaults.outlinedTextFieldColors(
+                unfocusedBorderColor = Color.Transparent,
+                focusedBorderColor = Color.Transparent,
+            )
+        )
+        Divider()
+    }
+}
+
+@RequiresApi(Build.VERSION_CODES.O)
+@Composable
+fun ThirdScreen() {
+    var selectedDate by remember { mutableStateOf(LocalDate.now()) }
+
+    Column {
+        Spacer(Modifier.height(10.dp))
+        Text(
+            modifier = Modifier.fillMaxWidth(),
+            text = "원하시는 날짜를 전부 선택해 주세요",
+            style = TextStyle(fontSize = 20.sp),
+            textAlign = TextAlign.Center
+        )
+        Spacer(Modifier.height(10.dp))
+        Divider()
+        Spacer(Modifier.height(20.dp))
+        Text(
+            modifier = Modifier.fillMaxWidth(),
+            text = "아직 선택된 날짜가 없어요",
+            style = TextStyle(fontSize = 20.sp),
+            textAlign = TextAlign.Center
+        )
+    }
+}
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun FourthScreen() {
+    var text1 by remember { mutableStateOf("시작시간") }
+    var text2 by remember { mutableStateOf("종료시간") }
+
+    Column(
+        modifier = Modifier.padding(horizontal = 20.dp, vertical = 30.dp)
+    ) {
+        Text("언제 만날까요?", modifier = Modifier.padding(bottom = 5.dp), style = TextStyle(fontSize = 20.sp))
+        Text("약속 시간대를 입력해 주세요.", modifier = Modifier.padding(bottom = 10.dp), style = TextStyle(fontSize = 15.sp))
+        Spacer(Modifier.height(10.dp))
+        //시간 선택 기능 구현 필요
+    }
+}
+
+@Composable
+fun CompleteScreen() {
+    Column(
+        modifier = Modifier
+            .padding(horizontal = 20.dp, vertical = 30.dp)
+            .fillMaxWidth(), // Column을 가로로 채우도록 설정
+        horizontalAlignment = Alignment.CenterHorizontally // 내용을 가로 중앙에 배치
+    ) {
+        Text(
+            "함께할 친구들을 초대해 볼까요?",
+            modifier = Modifier.padding(bottom = 5.dp),
+            style = TextStyle(fontSize = 20.sp),
+            textAlign = TextAlign.Start // 텍스트 중앙 정렬
+        )
+        Text(
+            "초대장이 만들어졌어요",
+            modifier = Modifier.padding(bottom = 10.dp),
+            style = TextStyle(fontSize = 15.sp),
+            textAlign = TextAlign.Center // 텍스트 중앙 정렬
+        )
+        Spacer(Modifier.height(30.dp))
+        Icon(
+            Icons.Default.Send,
+            contentDescription = null,
+            modifier = Modifier.size(200.dp) // 아이콘 크기 조정
+        )
+        Spacer(Modifier.height(20.dp))
+        Text(
+            "친구들이 참여하면\n모두가 참여할 수 있는 시간을 골라드려요.",
+            textAlign = TextAlign.Center // 텍스트 중앙 정렬
+        )
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/together_watch/ui/person/PromiseAcceptScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/together_watch/ui/person/PromiseAcceptScreen.kt b/app/src/main/java/com/example/together_watch/ui/person/PromiseAcceptScreen.kt
new file mode 100644
--- /dev/null	(date 1700629126517)
+++ b/app/src/main/java/com/example/together_watch/ui/person/PromiseAcceptScreen.kt	(date 1700629126517)
@@ -0,0 +1,60 @@
+package com.example.together_watch.ui.person
+
+import android.os.Build
+import androidx.annotation.RequiresApi
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.DateRange
+import androidx.compose.material3.Icon
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+import com.example.together_watch.ui.Destinations
+@Composable
+@RequiresApi(Build.VERSION_CODES.O)
+fun PromiseAcceptScreen(){
+
+}
+@Composable
+fun PromiseCompleteScreen() {
+    Column(
+        modifier = Modifier
+            .padding(horizontal = 20.dp, vertical = 30.dp)
+            .fillMaxWidth(), // Column을 가로로 채우도록 설정
+        horizontalAlignment = Alignment.CenterHorizontally // 내용을 가로 중앙에 배치
+    ) {
+        Text(
+            "약속 확정이 완료되었어요!",
+            modifier = Modifier.padding(bottom = 5.dp),
+            style = TextStyle(fontSize = 20.sp),
+            textAlign = TextAlign.Start // 텍스트 중앙 정렬
+        )
+        Text(
+            "이제 모두의 캘린더에 약속이 추가되었어요",
+            modifier = Modifier.padding(bottom = 10.dp),
+            style = TextStyle(fontSize = 15.sp),
+            textAlign = TextAlign.Center // 텍스트 중앙 정렬
+        )
+        Spacer(Modifier.height(50.dp))
+        Icon(
+            Icons.Default.DateRange,
+            contentDescription = null,
+            modifier = Modifier.size(200.dp) // 아이콘 크기 조정
+        )
+        Spacer(Modifier.height(20.dp))
+        Text(
+            "약속 시간에 맞춰 미리\n톡캘린더로 리마인드 해드릴게요!",
+            textAlign = TextAlign.Center // 텍스트 중앙 정렬
+        )
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/together_watch/ui/BottomNavigationBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/together_watch/ui/BottomNavigationBar.kt b/app/src/main/java/com/example/together_watch/ui/BottomNavigationBar.kt
new file mode 100644
--- /dev/null	(date 1700629155798)
+++ b/app/src/main/java/com/example/together_watch/ui/BottomNavigationBar.kt	(date 1700629155798)
@@ -0,0 +1,142 @@
+package com.example.together_watch.ui
+
+
+import android.os.Build
+import androidx.annotation.RequiresApi
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.outlined.Home
+import androidx.compose.material.icons.outlined.Person
+import androidx.compose.material.icons.outlined.Settings
+import androidx.compose.material3.Icon
+import androidx.compose.material3.NavigationBar
+import androidx.compose.material3.NavigationBarItem
+import androidx.compose.material3.NavigationBarItemDefaults
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.MutableState
+import androidx.compose.runtime.getValue
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.vector.ImageVector
+import androidx.navigation.NavGraph.Companion.findStartDestination
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import androidx.navigation.compose.currentBackStackEntryAsState
+import com.example.together_watch.ui.home.CreatePromiseScreen
+
+
+import com.example.together_watch.ui.home.HomeScreen
+import com.example.together_watch.ui.person.PersonScreen
+import com.example.together_watch.ui.person.PromiseAcceptScreen
+
+import com.example.together_watch.ui.setting.AccountManagementScreen
+import com.example.together_watch.ui.setting.SettingScreen
+
+
+sealed class Destinations(
+    val route: String,
+    val title: String? = null,
+    val icon: ImageVector? = null
+) {
+    object HomeScreen : Destinations(
+        route = "home_screen",
+        title = "Home",
+        icon = Icons.Outlined.Home
+    )
+
+    object PersonScreen : Destinations(
+        route = "person_screen",
+        title = "Person",
+        icon = Icons.Outlined.Person
+    )
+
+    object SettingScreen : Destinations(
+        route = "setting_screen",
+        title = "Setting",
+        icon = Icons.Outlined.Settings
+    )
+    object AccountManagementScreen : Destinations(
+        route = "account_management_screen"
+    )
+    object CompleteScreen : Destinations(
+        route = "complete_screen"
+    )
+    object CreatePromiseScreen : Destinations(
+        route = "create_promise_screen"
+    )
+    object PromiseAcceptScreen : Destinations(
+        route = "promise_accept_screen"
+    )
+
+}
+
+@RequiresApi(Build.VERSION_CODES.O)
+@Composable
+fun NavigationGraph(navController: NavHostController) {
+    NavHost(navController, startDestination = Destinations.HomeScreen.route) {
+        composable(Destinations.HomeScreen.route) {
+            HomeScreen(navController)
+        }
+        composable(Destinations.PersonScreen.route) {
+            PersonScreen(navController)
+        }
+        composable(Destinations.SettingScreen.route) {
+            SettingScreen(navController)
+        }
+        composable(Destinations.AccountManagementScreen.route) {
+            AccountManagementScreen()
+        }
+        composable(Destinations.CreatePromiseScreen.route){
+            CreatePromiseScreen()
+        }
+        composable(Destinations.PromiseAcceptScreen.route){
+            PromiseAcceptScreen()
+        }
+
+
+
+    }
+}
+
+@Composable
+fun BottomBar(
+    navController: NavHostController, state: MutableState<Boolean>, modifier: Modifier = Modifier
+) {
+    val screens = listOf(
+        Destinations.HomeScreen, Destinations.PersonScreen, Destinations.SettingScreen
+    )
+
+    NavigationBar(
+        modifier = modifier,
+        containerColor = Color.White,
+    ) {
+        val navBackStackEntry by navController.currentBackStackEntryAsState()
+        val currentRoute = navBackStackEntry?.destination?.route
+
+        screens.forEach { screen ->
+
+            NavigationBarItem(
+                label = {
+                    Text(text = screen.title!!)
+                },
+                icon = {
+                    Icon(imageVector = screen.icon!!, contentDescription = "")
+                },
+                selected = currentRoute == screen.route,
+                onClick = {
+                    navController.navigate(screen.route) {
+                        popUpTo(navController.graph.findStartDestination().id) {
+                            saveState = true
+                        }
+                        launchSingleTop = true
+                        restoreState = true
+                    }
+                },
+                colors = NavigationBarItemDefaults.colors(
+                    unselectedTextColor = Color.Gray, selectedTextColor = Color.Black
+                ),
+            )
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/together_watch/ui/setting/AccountManagementScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/together_watch/ui/setting/AccountManagementScreen.kt b/app/src/main/java/com/example/together_watch/ui/setting/AccountManagementScreen.kt
new file mode 100644
--- /dev/null	(date 1700500458000)
+++ b/app/src/main/java/com/example/together_watch/ui/setting/AccountManagementScreen.kt	(date 1700500458000)
@@ -0,0 +1,74 @@
+package com.example.together_watch.ui.setting
+
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.PaddingValues
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.material3.AlertDialog
+import androidx.compose.material3.Button
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.unit.dp
+import androidx.compose.ui.unit.sp
+
+@Composable
+fun AccountManagementScreen() {
+    var showDialog by remember { mutableStateOf(false) }
+
+    Column(modifier = Modifier.padding(PaddingValues(all = 20.dp))) {
+        // 계정 관리
+        Text(
+            text = "계정 관리",
+            fontSize = 25.sp,
+            fontWeight = FontWeight.Bold
+        )
+        Spacer(modifier = Modifier.height(15.dp))
+
+        // 로그아웃
+        Text(
+            text = "로그아웃",
+            fontSize = 18.sp,
+            color = Color.Black,
+            modifier = Modifier.clickable { /* 로그아웃 처리 */ }
+        )
+        Spacer(modifier = Modifier.height(12.dp))
+        // 탈퇴
+        Text(
+            text = "탈퇴",
+            fontSize = 18.sp,
+            color = Color.Gray,
+            modifier = Modifier.clickable { showDialog = true }
+        )
+    }
+
+    // 탈퇴 다이얼로그
+    if (showDialog) {
+        AlertDialog(
+            onDismissRequest = { showDialog = false },
+            title = { Text(text = "탈퇴 확인") },
+            text = { Text(text = "정말 탈퇴하시겠습니까?") },
+            confirmButton = {
+                Button(onClick = {
+                    // 탈퇴 처리
+                    showDialog = false
+                }) {
+                    Text("확인")
+                }
+            },
+            dismissButton = {
+                Button(onClick = { showDialog = false }) {
+                    Text("취소")
+                }
+            }
+        )
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/together_watch/ui/home/HomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/together_watch/ui/home/HomeScreen.kt b/app/src/main/java/com/example/together_watch/ui/home/HomeScreen.kt
new file mode 100644
--- /dev/null	(date 1700630071660)
+++ b/app/src/main/java/com/example/together_watch/ui/home/HomeScreen.kt	(date 1700630071660)
@@ -0,0 +1,143 @@
+package com.example.together_watch.ui.home
+
+import android.os.Build
+import androidx.annotation.RequiresApi
+import androidx.compose.animation.AnimatedVisibility
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Box
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.Spacer
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
+import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.width
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.LazyRow
+import androidx.compose.foundation.lazy.items
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Add
+import androidx.compose.material.icons.filled.ArrowBack
+import androidx.compose.material.icons.filled.ArrowForward
+import androidx.compose.material.icons.filled.Close
+import androidx.compose.material3.Button
+import androidx.compose.material3.Card
+import androidx.compose.material3.CardDefaults
+import androidx.compose.material3.FloatingActionButton
+import androidx.compose.material3.Icon
+import androidx.compose.material3.IconButton
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.tooling.preview.Device
+import androidx.compose.ui.tooling.preview.Devices
+import androidx.compose.ui.tooling.preview.Preview
+import androidx.compose.ui.unit.dp
+import androidx.navigation.NavController
+import com.example.together_watch.ui.Destinations
+import java.time.DayOfWeek
+import java.time.LocalDate
+import java.time.YearMonth
+import java.time.format.DateTimeFormatter
+import java.time.format.TextStyle
+import java.util.Locale
+
+@RequiresApi(Build.VERSION_CODES.O)
+@Composable
+fun HomeScreen(
+    navController: NavController
+) {
+    var events by remember { mutableStateOf(listOf<String>()) }
+    var showAddEvent by remember { mutableStateOf(false) }
+
+    Box(modifier = Modifier.fillMaxSize()) {
+
+        FloatingActionButton(
+            onClick = { showAddEvent = !showAddEvent },
+            modifier = Modifier
+                .align(Alignment.BottomEnd)
+                .padding(16.dp)
+        ) {
+            Icon(if (showAddEvent) Icons.Filled.Close
+                else Icons.Filled.Add, "Toggle Buttons")
+        }
+
+        // 추가 버튼들 표시
+        AnimatedVisibility(
+            visible = showAddEvent,
+            modifier = Modifier
+                .align(Alignment.BottomEnd)
+                .padding(bottom = 82.dp, end = 26.dp)
+        ) {
+            Column(horizontalAlignment = Alignment.End) {
+                ButtonRow("약속 일정 추가", onClick = { navController.navigate(Destinations.CreatePromiseScreen.route) })
+                ButtonRow("개인 일정 추가", onClick = { /* 두 번째 버튼의 기능 */ })
+            }
+        }
+    }
+}
+
+@Composable
+fun ButtonRow(text: String, onClick: () -> Unit) {
+    Spacer(modifier = Modifier.height(10.dp))
+    Row(verticalAlignment = Alignment.CenterVertically) {
+        Text(
+            text = text,
+            modifier = Modifier.padding(end = 8.dp)
+        )
+        Button(
+            onClick = onClick,
+            modifier = Modifier.size(36.dp)
+        ) {
+            Icon(Icons.Filled.ArrowForward, contentDescription = text)
+        }
+    }
+}
+
+
+
+@Composable
+fun EventsList(events: List<String>) {
+    Column(
+        modifier = Modifier
+            .fillMaxWidth()
+            .padding(16.dp)
+    ) {
+        events.forEach { event ->
+            Card(
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .padding(vertical = 4.dp), // 직접적으로 backgroundColor를 지정
+                colors = CardDefaults.cardColors(
+                    containerColor = Color.White,
+                ),
+                elevation = CardDefaults.cardElevation(
+                    defaultElevation = 5.dp
+                )
+            ) {
+                Column(
+                    modifier = Modifier.padding(16.dp)
+                ) {
+                    Text(text = "Event Date and Time", style = MaterialTheme.typography.headlineMedium)
+                    Text(text = "Event Title: ", style = MaterialTheme.typography.bodyMedium)
+                    Text(text = "Event Details", style = MaterialTheme.typography.bodySmall)
+                }
+            }
+        }
+    }
+}
+
+
+
+
